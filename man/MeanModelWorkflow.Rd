% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mean-model-workflow.R
\name{MeanModelWorkflow}
\alias{MeanModelWorkflow}
\title{MeanModelWorkflow}
\description{
R6 class for Reporting Engine Mean Model Workflow
}
\section{Super class}{
\code{\link[ospsuite.reportingengine:Workflow]{ospsuite.reportingengine::Workflow}} -> \code{MeanModelWorkflow}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{simulate}}{R6 class `Task` for simulation}

\item{\code{meanModelPKParameters}}{R6 class `Task` for PK parameters calculation}

\item{\code{meanModelSensitivityAnalysis}}{R6 class `Task` for sensitivity analysis}

\item{\code{plotGoF}}{R6 class `PlotTask` for goodness of fit plots}

\item{\code{plotMassBalance}}{R6 class `PlotTask` for mass balance plot}

\item{\code{plotAbsorption}}{R6 class `PlotTask` for absorption plot}

\item{\code{plotPKParameters}}{R6 class `PlotTask` for PK parameters plot}

\item{\code{plotSensitivity}}{R6 class `PlotTask` for sensitivity plot}

\item{\code{resetReport}}{R6 class `Task` for saving report in a specific format}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{MeanModelWorkflow$new()}}
\item \href{#method-simulateSettings}{\code{MeanModelWorkflow$simulateSettings()}}
\item \href{#method-calculatePKParametersSettings}{\code{MeanModelWorkflow$calculatePKParametersSettings()}}
\item \href{#method-meanModelSensitivityAnalysisSettings}{\code{MeanModelWorkflow$meanModelSensitivityAnalysisSettings()}}
\item \href{#method-plotGoFSettings}{\code{MeanModelWorkflow$plotGoFSettings()}}
\item \href{#method-plotPKParametersSettings}{\code{MeanModelWorkflow$plotPKParametersSettings()}}
\item \href{#method-plotMassBalanceSettings}{\code{MeanModelWorkflow$plotMassBalanceSettings()}}
\item \href{#method-plotAbsorptionSettings}{\code{MeanModelWorkflow$plotAbsorptionSettings()}}
\item \href{#method-plotSensitivitySettings}{\code{MeanModelWorkflow$plotSensitivitySettings()}}
\item \href{#method-resetReportSettings}{\code{MeanModelWorkflow$resetReportSettings()}}
\item \href{#method-runWorkflow}{\code{MeanModelWorkflow$runWorkflow()}}
\item \href{#method-print}{\code{MeanModelWorkflow$print()}}
\item \href{#method-clone}{\code{MeanModelWorkflow$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Workflow" data-id="activateTasks">}\href{../../ospsuite.reportingengine/html/Workflow.html#method-activateTasks}{\code{ospsuite.reportingengine::Workflow$activateTasks()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Workflow" data-id="getActiveTasks">}\href{../../ospsuite.reportingengine/html/Workflow.html#method-getActiveTasks}{\code{ospsuite.reportingengine::Workflow$getActiveTasks()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Workflow" data-id="getAllPlotTasks">}\href{../../ospsuite.reportingengine/html/Workflow.html#method-getAllPlotTasks}{\code{ospsuite.reportingengine::Workflow$getAllPlotTasks()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Workflow" data-id="getAllTasks">}\href{../../ospsuite.reportingengine/html/Workflow.html#method-getAllTasks}{\code{ospsuite.reportingengine::Workflow$getAllTasks()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Workflow" data-id="getInactiveTasks">}\href{../../ospsuite.reportingengine/html/Workflow.html#method-getInactiveTasks}{\code{ospsuite.reportingengine::Workflow$getInactiveTasks()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Workflow" data-id="inactivateTasks">}\href{../../ospsuite.reportingengine/html/Workflow.html#method-inactivateTasks}{\code{ospsuite.reportingengine::Workflow$inactivateTasks()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Workflow" data-id="printReportingEngineInfo">}\href{../../ospsuite.reportingengine/html/Workflow.html#method-printReportingEngineInfo}{\code{ospsuite.reportingengine::Workflow$printReportingEngineInfo()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new `MeanModelWorkflow` object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{input parameters inherited from R6 class object `Workflow`.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `MeanModelWorkflow` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-simulateSettings"></a>}}
\subsection{Method \code{simulateSettings()}}{
Define simulate `SimulationTask` settings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$simulateSettings(
  taskFunction = simulateModel,
  outputFolder = defaultTaskOutputFolders$simulate,
  active = TRUE,
  message = defaultWorkflowMessages$simulate,
  settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{taskFunction}}{function performed by `Task` to get results}

\item{\code{outputFolder}}{folder where `Task` output is saved}

\item{\code{active}}{logical defining if `Task` will be run by workflow
Default value is `TRUE`}

\item{\code{message}}{message/title of the `Task`}

\item{\code{settings}}{specific settings for `Task`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SimulationTask` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-calculatePKParametersSettings"></a>}}
\subsection{Method \code{calculatePKParametersSettings()}}{
Define calculate PK Parameters `CalculatePKParametersTask` settings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$calculatePKParametersSettings(
  taskFunction = calculatePKParameters,
  outputFolder = defaultTaskOutputFolders$calculatePKParameters,
  active = FALSE,
  message = defaultWorkflowMessages$calculatePKParameters,
  settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{taskFunction}}{function performed by `Task` to get results}

\item{\code{outputFolder}}{folder where `Task` output is saved}

\item{\code{active}}{logical defining if `Task` will be run by workflow
Default value is `FALSE`}

\item{\code{message}}{message/title of the `Task`}

\item{\code{settings}}{specific settings for `Task`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SimulationTask` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-meanModelSensitivityAnalysisSettings"></a>}}
\subsection{Method \code{meanModelSensitivityAnalysisSettings()}}{
Define mean Model Sensitivity Analysis `SensitivityAnalysisTask` settings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$meanModelSensitivityAnalysisSettings(
  taskFunction = runSensitivity,
  outputFolder = defaultTaskOutputFolders$sensitivityAnalysis,
  active = FALSE,
  message = defaultWorkflowMessages$sensitivityAnalysis,
  settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{taskFunction}}{function performed by `Task` to get results}

\item{\code{outputFolder}}{folder where `Task` output is saved}

\item{\code{active}}{logical defining if `Task` will be run by workflow
Default value is `FALSE`}

\item{\code{message}}{message/title of the `Task`}

\item{\code{settings}}{specific settings for `Task`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SimulationTask` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotGoFSettings"></a>}}
\subsection{Method \code{plotGoFSettings()}}{
Define Goodness of fit `PlotTask` settings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$plotGoFSettings(
  reportTitle = defaultWorkflowTitles$plotGoF,
  taskFunction = plotMeanGoodnessOfFit,
  outputFolder = defaultTaskOutputFolders$plotGoF,
  active = FALSE,
  message = defaultWorkflowMessages$plotGoF,
  settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reportTitle}}{section title of plot task result within report}

\item{\code{taskFunction}}{function called by task to get the results as a list of `plots` and `tables`}

\item{\code{outputFolder}}{folder where `Task` output is saved}

\item{\code{active}}{logical indicating if `task` is performed in worklfow.
Default value is `FALSE`}

\item{\code{message}}{message indicating what the `task` does}

\item{\code{settings}}{specific settings for task}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A `PlotTask` object for goodness of fit plots
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotPKParametersSettings"></a>}}
\subsection{Method \code{plotPKParametersSettings()}}{
Define PK parameters `PlotPKParametersTask` settings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$plotPKParametersSettings(
  reportTitle = defaultWorkflowTitles$plotPKParameters,
  taskFunction = plotMeanPKParameters,
  outputFolder = defaultTaskOutputFolders$plotPKParameters,
  active = FALSE,
  message = defaultWorkflowMessages$plotPKParameters,
  settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reportTitle}}{section title of plot task result within report}

\item{\code{taskFunction}}{function called by task to get the results as a list of `plots` and `tables`}

\item{\code{outputFolder}}{folder where `Task` output is saved}

\item{\code{active}}{logical indicating if `task` is performed in worklfow.
Default value is `FALSE`}

\item{\code{message}}{message indicating what the `task` does}

\item{\code{settings}}{specific settings for task}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A `PlotPKParametersTask` object for PK parameters tables
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotMassBalanceSettings"></a>}}
\subsection{Method \code{plotMassBalanceSettings()}}{
Define Mass Balance `PlotTask` settings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$plotMassBalanceSettings(
  reportTitle = defaultWorkflowTitles$plotMassBalance,
  taskFunction = plotMeanMassBalance,
  outputFolder = defaultTaskOutputFolders$plotMassBalance,
  active = FALSE,
  message = defaultWorkflowMessages$plotMassBalance,
  settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reportTitle}}{section title of plot task result within report}

\item{\code{taskFunction}}{function called by task to get the results as a list of `plots` and `tables`}

\item{\code{outputFolder}}{folder where `Task` output is saved}

\item{\code{active}}{logical indicating if `task` is performed in worklfow.
Default value is `FALSE`}

\item{\code{message}}{message indicating what the `task` does}

\item{\code{settings}}{specific settings for task}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A `PlotTask` object for goodness of fit plots
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotAbsorptionSettings"></a>}}
\subsection{Method \code{plotAbsorptionSettings()}}{
Define Absorption `PlotTask` settings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$plotAbsorptionSettings(
  reportTitle = defaultWorkflowTitles$plotAbsorption,
  taskFunction = plotMeanAbsorption,
  outputFolder = defaultTaskOutputFolders$plotAbsorption,
  active = FALSE,
  message = defaultWorkflowMessages$plotAbsorption,
  settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reportTitle}}{section title of plot task result within report}

\item{\code{taskFunction}}{function called by task to get the results as a list of `plots` and `tables`}

\item{\code{outputFolder}}{folder where `Task` output is saved}

\item{\code{active}}{logical indicating if `task` is performed in worklfow.
Default value is `FALSE`}

\item{\code{message}}{message indicating what the `task` does}

\item{\code{settings}}{specific settings for task}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A `PlotTask` object for goodness of fit plots
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotSensitivitySettings"></a>}}
\subsection{Method \code{plotSensitivitySettings()}}{
Define sensitivity analysis `PlotTask` settings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$plotSensitivitySettings(
  reportTitle = defaultWorkflowTitles$plotSensitivity,
  taskFunction = plotMeanSensitivity,
  outputFolder = defaultTaskOutputFolders$plotSensitivity,
  active = FALSE,
  message = defaultWorkflowMessages$plotSensitivity,
  settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reportTitle}}{section title of plot task result within report}

\item{\code{taskFunction}}{function called by task to get the results as a list of `plots` and `tables`}

\item{\code{outputFolder}}{folder where `Task` output is saved}

\item{\code{active}}{logical indicating if `task` is performed in worklfow.
Default value is `FALSE`}

\item{\code{message}}{message indicating what the `task` does}

\item{\code{settings}}{specific settings for task}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A `PlotTask` object for goodness of fit plots
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-resetReportSettings"></a>}}
\subsection{Method \code{resetReportSettings()}}{
Define reset report `Task` settings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$resetReportSettings(
  active = FALSE,
  message = defaultWorkflowMessages$resetReport,
  settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{active}}{logical indicating if `Task` is performed in worklfow.
Default value is `FALSE`}

\item{\code{message}}{message indicating what the `task` does}

\item{\code{settings}}{specific settings for task}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A `PlotTask` object for goodness of fit plots
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-runWorkflow"></a>}}
\subsection{Method \code{runWorkflow()}}{
Run mean model workflow tasks for all simulation sets if tasks are activated
The order of tasks is as follows:
# 1) Run simulations
# 2) Perform PK and sensitivity analyses
# 3) Perform plot tasks
## 3.a) time profiles and residual plots
## 3.b) absorption plots
## 3.c) mass balance plots
## 3.d) PK and sensitivity analyses tables and plots
# 4) Render report
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$runWorkflow()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
All results and plots as a structured output in the workflow folder
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
Print workflow list of tasks
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Task list information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MeanModelWorkflow$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
