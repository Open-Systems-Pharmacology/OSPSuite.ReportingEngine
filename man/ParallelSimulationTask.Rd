% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel-simulation-task.R
\name{ParallelSimulationTask}
\alias{ParallelSimulationTask}
\title{ParallelSimulationTask}
\description{
R6 class for ParallelSimulationTask settings
}
\section{Super classes}{
\code{\link[ospsuite.reportingengine:Task]{ospsuite.reportingengine::Task}} -> \code{\link[ospsuite.reportingengine:SimulationTask]{ospsuite.reportingengine::SimulationTask}} -> \code{ParallelSimulationTask}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ParallelSimulationTask$new()}}
\item \href{#method-runTask}{\code{ParallelSimulationTask$runTask()}}
\item \href{#method-clone}{\code{ParallelSimulationTask$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="activate">}\href{../../ospsuite.reportingengine/html/Task.html#method-activate}{\code{ospsuite.reportingengine::Task$activate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="getAbsolutePath">}\href{../../ospsuite.reportingengine/html/Task.html#method-getAbsolutePath}{\code{ospsuite.reportingengine::Task$getAbsolutePath()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="getInputs">}\href{../../ospsuite.reportingengine/html/Task.html#method-getInputs}{\code{ospsuite.reportingengine::Task$getInputs()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="getRelativePath">}\href{../../ospsuite.reportingengine/html/Task.html#method-getRelativePath}{\code{ospsuite.reportingengine::Task$getRelativePath()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="inactivate">}\href{../../ospsuite.reportingengine/html/Task.html#method-inactivate}{\code{ospsuite.reportingengine::Task$inactivate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="print">}\href{../../ospsuite.reportingengine/html/Task.html#method-print}{\code{ospsuite.reportingengine::Task$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="validateInput">}\href{../../ospsuite.reportingengine/html/Task.html#method-validateInput}{\code{ospsuite.reportingengine::Task$validateInput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="validateStructureSetInput">}\href{../../ospsuite.reportingengine/html/Task.html#method-validateStructureSetInput}{\code{ospsuite.reportingengine::Task$validateStructureSetInput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="SimulationTask" data-id="saveResults">}\href{../../ospsuite.reportingengine/html/SimulationTask.html#method-saveResults}{\code{ospsuite.reportingengine::SimulationTask$saveResults()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a `ParallelSimulationTask` object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParallelSimulationTask$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{parameters inherited from R6 class `SimulationTask` object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SimulationTask` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-runTask"></a>}}
\if{latex}{\out{\hypertarget{method-runTask}{}}}
\subsection{Method \code{runTask()}}{
Run task and save its output
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParallelSimulationTask$runTask(structureSets)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{structureSets}}{list of `SimulationStructure` R6 class}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParallelSimulationTask$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
