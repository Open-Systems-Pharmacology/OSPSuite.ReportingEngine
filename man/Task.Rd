% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/task.R
\name{Task}
\alias{Task}
\title{Task}
\description{
R6 class for Task settings
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{active}}{logical indicating if `Task` is performed in a worklfow.}

\item{\code{outputFolder}}{List of output files/folders to save the task output}

\item{\code{workflowFolder}}{folder where workflow is run and saved}

\item{\code{settings}}{list of settings for task such as plot configurations}

\item{\code{message}}{message or title of the task}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Task$new()}}
\item \href{#method-activate}{\code{Task$activate()}}
\item \href{#method-inactivate}{\code{Task$inactivate()}}
\item \href{#method-validateInput}{\code{Task$validateInput()}}
\item \href{#method-validateStructureSetInput}{\code{Task$validateStructureSetInput()}}
\item \href{#method-print}{\code{Task$print()}}
\item \href{#method-getInputs}{\code{Task$getInputs()}}
\item \href{#method-clone}{\code{Task$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a `Task` object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$new(
  outputFolder = NULL,
  inputFolder = NULL,
  inputs = NULL,
  outputs = NULL,
  workflowFolder = getwd(),
  settings = NULL,
  active = FALSE,
  message = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{outputFolder}}{task output folder to save results}

\item{\code{inputFolder}}{task input folder where input files are stored}

\item{\code{inputs}}{expected input files required by task}

\item{\code{outputs}}{expected output files generated by task}

\item{\code{workflowFolder}}{folder where workflow is run and saved}

\item{\code{settings}}{specific settings for task (e.g. plot configurations)}

\item{\code{active}}{logical indicating if `Task` is performed in a worklfow.
Default value is `FALSE`}

\item{\code{message}}{message of the `Task`.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `Task` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-activate"></a>}}
\subsection{Method \code{activate()}}{
Activate `Task`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$activate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-inactivate"></a>}}
\subsection{Method \code{inactivate()}}{
Inactivate `Task`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$inactivate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validateInput"></a>}}
\subsection{Method \code{validateInput()}}{
Check if `Task` inputs exist
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$validateInput()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
logical indicating if input is valid
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validateStructureSetInput"></a>}}
\subsection{Method \code{validateStructureSetInput()}}{
Check if a task input from a specific `SimulationStructure` is valid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$validateStructureSetInput(structureSet)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{structureSet}}{`SimulationStructure` object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
logical indicating if input is valid
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
Print `Task` features
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Text of task features
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getInputs"></a>}}
\subsection{Method \code{getInputs()}}{
Get `Task` required input files
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$getInputs()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Required file names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
