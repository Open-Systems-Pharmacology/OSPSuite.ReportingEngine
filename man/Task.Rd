% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/task.R
\name{Task}
\alias{Task}
\title{Task}
\description{
R6 class for Task settings
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{active}}{logical}

\item{\code{input}}{List of input files/folders to use to perform tasks}

\item{\code{output}}{List of output files/folders to save the task output}

\item{\code{settings}}{class}

\item{\code{message}}{message or title of the task}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Task$new()}}
\item \href{#method-activate}{\code{Task$activate()}}
\item \href{#method-inactivate}{\code{Task$inactivate()}}
\item \href{#method-validateInput}{\code{Task$validateInput()}}
\item \href{#method-print}{\code{Task$print()}}
\item \href{#method-clone}{\code{Task$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a `Task` object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$new(
  input = NULL,
  output = NULL,
  settings = NULL,
  active = FALSE,
  message = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{list of files or folders of input}

\item{\code{output}}{list of files or folders of output}

\item{\code{settings}}{specific settings for task}

\item{\code{active}}{logical indicating if `task` is performed in a worklfow.
Default value is `FALSE`}

\item{\code{message}}{title of the `task`.
Default value indicates `task` name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `Task` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-activate"></a>}}
\subsection{Method \code{activate()}}{
Activate `Task`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$activate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-inactivate"></a>}}
\subsection{Method \code{inactivate()}}{
Inactivate `Task`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$inactivate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validateInput"></a>}}
\subsection{Method \code{validateInput()}}{
Check if `Task` inputs exist
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$validateInput()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
logical indicating if input is valid
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
Print `Task` features
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of task features
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
