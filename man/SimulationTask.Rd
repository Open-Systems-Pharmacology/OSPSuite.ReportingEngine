% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation-task.R
\name{SimulationTask}
\alias{SimulationTask}
\title{SimulationTask}
\description{
R6 class for SimulationTask settings
}
\keyword{internal}
\section{Super class}{
\code{\link[ospsuite.reportingengine:Task]{ospsuite.reportingengine::Task}} -> \code{SimulationTask}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{getTaskResults}}{function called by task that computes and format figure results}

\item{\code{settings}}{instance of SimulationSettings class}

\item{\code{nameTaskResults}}{name of function that returns task results}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SimulationTask-new}{\code{SimulationTask$new()}}
\item \href{#method-SimulationTask-saveResults}{\code{SimulationTask$saveResults()}}
\item \href{#method-SimulationTask-runTask}{\code{SimulationTask$runTask()}}
\item \href{#method-SimulationTask-clone}{\code{SimulationTask$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="activate"><a href='../../ospsuite.reportingengine/html/Task.html#method-Task-activate'><code>ospsuite.reportingengine::Task$activate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="getAbsolutePath"><a href='../../ospsuite.reportingengine/html/Task.html#method-Task-getAbsolutePath'><code>ospsuite.reportingengine::Task$getAbsolutePath()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="getInputs"><a href='../../ospsuite.reportingengine/html/Task.html#method-Task-getInputs'><code>ospsuite.reportingengine::Task$getInputs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="getRelativePath"><a href='../../ospsuite.reportingengine/html/Task.html#method-Task-getRelativePath'><code>ospsuite.reportingengine::Task$getRelativePath()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="inactivate"><a href='../../ospsuite.reportingengine/html/Task.html#method-Task-inactivate'><code>ospsuite.reportingengine::Task$inactivate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="print"><a href='../../ospsuite.reportingengine/html/Task.html#method-Task-print'><code>ospsuite.reportingengine::Task$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="validateInput"><a href='../../ospsuite.reportingengine/html/Task.html#method-Task-validateInput'><code>ospsuite.reportingengine::Task$validateInput()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ospsuite.reportingengine" data-topic="Task" data-id="validateStructureSetInput"><a href='../../ospsuite.reportingengine/html/Task.html#method-Task-validateStructureSetInput'><code>ospsuite.reportingengine::Task$validateStructureSetInput()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationTask-new"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationTask-new}{}}}
\subsection{Method \code{new()}}{
Create a `SimulationTask` object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationTask$new(
  getTaskResults = NULL,
  settings = NULL,
  nameTaskResults = "none",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{getTaskResults}}{function called by task that computes and format figure results}

\item{\code{settings}}{instance of SimulationSettings class}

\item{\code{nameTaskResults}}{name of function that returns task results}

\item{\code{...}}{parameters inherited from R6 class `Task` object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `SimulationTask` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationTask-saveResults"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationTask-saveResults}{}}}
\subsection{Method \code{saveResults()}}{
Save results from task run.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationTask$saveResults(set, taskResults)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{set}}{R6 class `SimulationStructure`}

\item{\code{taskResults}}{list of results from task run.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationTask-runTask"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationTask-runTask}{}}}
\subsection{Method \code{runTask()}}{
Run task and save its output
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationTask$runTask(structureSets)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{structureSets}}{list of `SimulationStructure` R6 class}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SimulationTask-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SimulationTask-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimulationTask$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
