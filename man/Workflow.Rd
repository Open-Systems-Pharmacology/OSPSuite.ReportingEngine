% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow.R
\name{Workflow}
\alias{Workflow}
\title{Workflow}
\description{
R6 class representing Reporting Engine generic Workflow
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{simulationStructures}}{`SimulationStructure` R6 class object managing the structure of the workflow output}

\item{\code{workflowFolder}}{path of the folder create by the Workflow}

\item{\code{taskNames}}{Enum of task names}

\item{\code{reportFileName}}{name of the Rmd report file}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Workflow$new()}}
\item \href{#method-getAllTasks}{\code{Workflow$getAllTasks()}}
\item \href{#method-getAllPlotTasks}{\code{Workflow$getAllPlotTasks()}}
\item \href{#method-getActiveTasks}{\code{Workflow$getActiveTasks()}}
\item \href{#method-getInactiveTasks}{\code{Workflow$getInactiveTasks()}}
\item \href{#method-activateTasks}{\code{Workflow$activateTasks()}}
\item \href{#method-inactivateTasks}{\code{Workflow$inactivateTasks()}}
\item \href{#method-printReportingEngineInfo}{\code{Workflow$printReportingEngineInfo()}}
\item \href{#method-print}{\code{Workflow$print()}}
\item \href{#method-clone}{\code{Workflow$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new `Workflow` object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$new(simulationSets, workflowFolder)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{simulationSets}}{list of `SimulationSet` R6 class objects}

\item{\code{workflowFolder}}{path of the output folder created or used by the Workflow.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `Workflow` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getAllTasks"></a>}}
\subsection{Method \code{getAllTasks()}}{
Get a vector with all the names of the tasks within the `Workflow`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$getAllTasks()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Vector of `Task` names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getAllPlotTasks"></a>}}
\subsection{Method \code{getAllPlotTasks()}}{
Get a vector with all the names of the plot tasks within the `Workflow`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$getAllPlotTasks()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Vector of `PlotTask` names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getActiveTasks"></a>}}
\subsection{Method \code{getActiveTasks()}}{
Get a vector with all the names of active tasks within the `Workflow`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$getActiveTasks()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Vector of active `Task` names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getInactiveTasks"></a>}}
\subsection{Method \code{getInactiveTasks()}}{
Get a vector with all the names of inactive tasks within the `Workflow`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$getInactiveTasks()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Vector of inactive `Task` names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-activateTasks"></a>}}
\subsection{Method \code{activateTasks()}}{
Activates a series of `Tasks` from current `Workflow`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$activateTasks(tasks = self$getAllTasks())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tasks}}{names of the worklfow tasks to activate.
Default activates all tasks of the workflow using workflow method `workflow$getAllTasks()`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Vector of inactive `Task` names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-inactivateTasks"></a>}}
\subsection{Method \code{inactivateTasks()}}{
Inactivates a series of `Tasks` from current `Workflow`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$inactivateTasks(tasks = self$getAllTasks())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tasks}}{names of the worklfow tasks to inactivate.
Default inactivates all tasks of the workflow using workflow method `workflow$getAllTasks()`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Vector of inactive `Task` names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-printReportingEngineInfo"></a>}}
\subsection{Method \code{printReportingEngineInfo()}}{
Print reporting engine information obtained from initiliazing a `Workflow`
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$printReportingEngineInfo()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
Print workflow list of tasks
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Task list information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Workflow$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
